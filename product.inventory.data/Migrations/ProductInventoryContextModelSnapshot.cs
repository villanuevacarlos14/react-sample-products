// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using product.inventory.data;

namespace product.inventory.data.Migrations
{
    [DbContext(typeof(ProductInventoryContext))]
    partial class ProductInventoryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("product.inventory.data.models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Brand = "Samsung",
                            CreatedDate = new DateTime(2021, 5, 9, 2, 44, 12, 57, DateTimeKind.Local).AddTicks(7590),
                            Name = "Galaxy Tab 9",
                            Price = 35000m
                        });
                });

            modelBuilder.Entity("product.inventory.data.models.ProductInventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CurrentStock")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.ToTable("ProductInventories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2021, 5, 9, 2, 44, 12, 57, DateTimeKind.Local).AddTicks(8850),
                            CurrentStock = 30,
                            ProductId = 1
                        });
                });

            modelBuilder.Entity("product.inventory.data.models.ProductInventoryLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductInventoryId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProductInventoryId");

                    b.ToTable("ProductInventoryLogs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2021, 5, 9, 2, 44, 12, 58, DateTimeKind.Local).AddTicks(690),
                            ProductInventoryId = 1,
                            Quantity = 30,
                            Type = 1
                        });
                });

            modelBuilder.Entity("product.inventory.data.models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2021, 5, 9, 2, 44, 12, 56, DateTimeKind.Local).AddTicks(6200),
                            Password = "AQAAAAEAACcQAAAAEPUWCTyDoPaEBD4v1KZiaX/lMh0asrVvyW5ZuOIqjKo5ck8q26v2ySmvJIRar8yNlQ==",
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("product.inventory.data.models.ProductInventory", b =>
                {
                    b.HasOne("product.inventory.data.models.Product", "Product")
                        .WithOne("ProductInventory")
                        .HasForeignKey("product.inventory.data.models.ProductInventory", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("product.inventory.data.models.ProductInventoryLog", b =>
                {
                    b.HasOne("product.inventory.data.models.ProductInventory", "ProductInventory")
                        .WithMany("ProductInventoryLogs")
                        .HasForeignKey("ProductInventoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductInventory");
                });

            modelBuilder.Entity("product.inventory.data.models.Product", b =>
                {
                    b.Navigation("ProductInventory");
                });

            modelBuilder.Entity("product.inventory.data.models.ProductInventory", b =>
                {
                    b.Navigation("ProductInventoryLogs");
                });
#pragma warning restore 612, 618
        }
    }
}
